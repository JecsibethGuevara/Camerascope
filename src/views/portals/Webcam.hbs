<body>
  <webview src="http://www.adobe.com/software/flash/about/" plugins></webview>>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>
  <img class="waveright" src="/recursos/images/waveright.png">
  <a class="direction" href="/Index"><img src="/recursos/icons/arrow-left.svg"></a>
  
  <div class="selectPatient">
    <input type="text" name="patientId" class="patientId">
  </div>

  <div class="body-cameras">

    <div class="camera-container">
      <div class="select">
        <label for="audioSource">Audio: </label><select id="audioSource"></select>
      </div>

      <div class="select">
        <label for="videoSource">Video: </label><select id="videoSource"></select>
      </div>

      <div id="camera">
        <video autoplay muted playsinline></video>          
      </div>      
      <button class="btn" onclick="report()"> Tomar Foto </button>
       <div class="fakeForm hide">
        <form action="/saveImage" method="GET" class="hide fakeform">
          <textarea name="baseimg" id="baseimgname"></textarea>
          <input type="submit" name="buttonsub">
        </form>
      </div>     
      <div class="canvas">
        <img src="" id="imagetaken" style="float: left; border=1px solid black; margin-left: 200px">
      </div>
      
    </div>

  </div>

  <div class="container">
    <img width="75%" class="screen"> 
  </div>
  <script>
      'use strict';

var videoElement = document.querySelector('video');
var canvas;
var audioSelect = document.querySelector('select#audioSource');
var videoSelect = document.querySelector('select#videoSource');

audioSelect.onchange = getStream;
videoSelect.onchange = getStream;

getStream().then(getDevices).then(gotDevices);

function getDevices() {
// AFAICT in Safari this only gets default devices until gUM is called :/
return navigator.mediaDevices.enumerateDevices();
}

function gotDevices(deviceInfos) {
window.deviceInfos = deviceInfos; // make available to console
console.log('Available input and output devices:', deviceInfos);
for (const deviceInfo of deviceInfos) {
  const option = document.createElement('option');
  option.value = deviceInfo.deviceId;
  if (deviceInfo.kind === 'audioinput') {
    option.text = deviceInfo.label || `Microphone ${audioSelect.length + 1}`;
    audioSelect.appendChild(option);
  } else if (deviceInfo.kind === 'videoinput') {
    option.text = deviceInfo.label || `Camera ${videoSelect.length + 1}`;
    videoSelect.appendChild(option);
  }
}
}

function getStream() {
if (window.stream) {
  window.stream.getTracks().forEach(track => {
    track.stop();
  });
}
const audioSource = audioSelect.value;
const videoSource = videoSelect.value;
const constraints = {
  audio: {deviceId: audioSource ? {exact: audioSource} : undefined},
  video: {deviceId: videoSource ? {exact: videoSource} : undefined}
};
return navigator.mediaDevices.getUserMedia(constraints).
  then(gotStream).catch(handleError);

}


function gotStream(stream) {
window.stream = stream; // make stream available to console
audioSelect.selectedIndex = [...audioSelect.options].
  findIndex(option => option.text === stream.getAudioTracks()[0].label);
  
videoSelect.selectedIndex = [...videoSelect.options].
  findIndex(option => option.text === stream.getVideoTracks()[0].label);
videoElement.srcObject = stream;
}

function handleError(error) {
console.error('Error: ', error);
}



function report() {
    var imagetaken =  document.querySelector('#imagetaken') 
    var canvasplace = document.querySelector('.canvas')
    var newImg = document.createElement('img');
    var context;
    newImg.classList.add('img')
    var img = document.querySelector('.img')

    var width = videoElement.offsetWidth
      , height = videoElement.offsetHeight;;
    canvas = canvas || document.createElement('canvas');
    canvasplace.appendChild(canvas)
    canvas.width = width;
    canvas.height = height;

    context = canvas.getContext('2d');
    context.drawImage(videoElement, 0, 0, width, height);
    
    context = canvas.toDataURL('image/jpeg');
    canvasplace.style.display = 'hidden';


    document.querySelector("#baseimgname").value = context

    
}


  </script>
</body>